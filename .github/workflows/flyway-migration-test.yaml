# This workflow uses Flyway Hub to test the Flyway database migrations in the 'sql' path(s).
#
# The workflow will run automatically against all pull requests that modify files under 'sql'.
#
# It will also run on all pushes to 'main' that modify files under 'sql'.
#
# In order to use this workflow you will need to create a Github Actions secret called
# FLYWAY_HUB_ACCESS_TOKEN containing a valid Flyway Hub API access token.
#
name: Database Migration Tests with Flyway

on:
  push:
    branches:
    - 'main'
    paths:
      - 'sql/**'
  pull_request:
    paths:
    - 'sql/**'
  workflow_dispatch: {}

jobs:
  test-migrations:
    name: Test flyway migration scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout/@v2
      - name: Test migrations on Flyway Hub
        uses: red-gate/flyway-hub-migration-test@v4
#       - name: Test migrations on Flyway Hub
#         uses: ragh01/flyway-test@sql/v1
        with:
          projectName: flywayy
          engine: postgres-13
          migrationDirs: sql 
          flywayConfPath: conf/flyway.conf  
          databaseName: flyway
      - run: PATH=/flyway:$PATH
      - run: chmod 744 drivers
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/cloud/sql/postgres-socket-factory/1.2.0/postgres-socket-factory-1.2.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/cloud/sql/jdbc-socket-factory-core/1.2.0/jdbc-socket-factory-core-1.2.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/http-client/google-http-client/1.38.0/google-http-client-1.38.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/http-client/google-http-client-jackson2/1.38.0/google-http-client-jackson2-1.38.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/github/jnr/jnr-unixsocket/0.38.5/jnr-unixsocket-0.38.5.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/guava/guava/30.1-jre/guava-30.1-jre.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/auth/google-auth-library-credentials/0.22.2/google-auth-library-credentials-0.22.2.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/auth/google-auth-library-oauth2-http/0.22.2/google-auth-library-oauth2-http-0.22.2.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.12.0/jackson-core-2.12.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/api-client/google-api-client/1.31.1/google-api-client-1.31.1.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/apis/google-api-services-sqladmin/v1beta4-rev76-1.25.0/google-api-services-sqladmin-v1beta4-rev76-1.25.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/io/opencensus/opencensus-api/0.28.2/opencensus-api-0.28.2.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/io/opencensus/opencensus-contrib-http-util/0.11.0/opencensus-contrib-http-util-0.11.0.jar
      - run: wget -P drivers https://repo1.maven.org/maven2/io/grpc/grpc-context/1.0.1/grpc-context-1.0.1.jar
      - run: chmod +x ./flyway
#       - run: ./flyway --help
      - run: ./flyway --migrate
env:
  FLYWAYHUB_ACCESS_TOKEN: ${{ secrets.FLYWAY_HUB_ACCESS_TOKEN }}
