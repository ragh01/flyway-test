# This workflow uses Flyway Hub to test the Flyway database migrations in the 'sql' path(s).
#
# The workflow will run automatically against all pull requests that modify files under 'sql'.
#
# It will also run on all pushes to 'main' that modify files under 'sql'.
#
# In order to use this workflow you will need to create a Github Actions secret called
# FLYWAY_HUB_ACCESS_TOKEN containing a valid Flyway Hub API access token.
#
name: Database Migration Tests with Flyway
FLYWAY_VERSION=8.5.4

on:
  push:
    branches:
    - 'main'
    paths:
      - 'sql/**'
  pull_request:
    paths:
    - 'sql/**'
  workflow_dispatch:
jobs:
  test-migrations:
    name: Test flyway migration scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout/@v2
#       - run: flywayVersion = '8.5.4'
#       - name: Test migrations on Flyway Hub
#         uses: red-gate/flyway-hub-migration-test@v4
# #       - name: Test migrations on Flyway Hub
# #         uses: ragh01/flyway-test@sql/v1
#         with:
#           projectName: flywayy
#           engine: postgres-13
#           migrationDirs: sql 
#           flywayConfPath: conf/flyway.conf  
#           databaseName: flyway
      - run: curl -L https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/${FLYWAY_VERSION}/flyway-commandline-${FLYWAY_VERSION}.tar.gz -o flyway-commandline-${FLYWAY_VERSION}.tar.gz \
  && tar -xzf flyway-commandline-${FLYWAY_VERSION}.tar.gz --strip-components=1 \
  && rm flyway-commandline-${FLYWAY_VERSION}.tar.gz
      - run: PATH=/flyway:$PATH
      - run: chmod 744 drivers
      - run: chmod +x ./flyway
#       - run: ./flyway --help
      - run: ./flyway --migrate
env:
  FLYWAYHUB_ACCESS_TOKEN: ${{ secrets.FLYWAY_HUB_ACCESS_TOKEN }}
